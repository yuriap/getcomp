Following instructions and scripts can be used to compare performance and execution plans of two sets of near the same queries taken from some SVT system. The only queries with the identical SQL_ID are compared.
Each of AWR snapshot sets can have overlapping ranges among them and can share the same database id (DBID).
A single getcomp.html is generated by the script. It contains 3 sections: Comparison of the same SQLs, Sysmetric report and Non-compared queries.

Use following instructions to create comparison reports:
1. Prepare some empty Oracle database (target DB). Use the Oracle version which is the same or younger than the youngest of that in comparison. For example, if you compare queries from 11.2.0.4 and 12.1.0.2, you have to use 12.1.0.2 or younger. Source database also can be used.
2. If snapshot ranges are going to overlap, create one more database and use remote_setup.sql to prepare it
3. Transport AWR repository with necessary snapshot sets from source databases to target DB using following instructions. 
4. Download files awr.css, getcomph.sql, getcomp_parameters.sql, remote_setup.sql, _getcomph.sql, __noncomp.sql, __procs.sql. Place them into some directory which is mentioned in SQLPATH env variable (local directory also suitable)
5. Create the file comp_params into local directory. getcomp_parameters can be used to generate it from a template. Put the following  configuration information in it as in an example below:

==================================================================================================================================
REM DBID for the first DB, can be only local AWR repository
define dbid1=3781652766
REM SNAP_ID range for the first DB (the starting snap will be excluded from analysys)
define start_snap1=4999
REM SNAP_ID range for the first DB
define end_snap1=5002
rem ====================================
rem local AWR repository
REM DBID for the second DB
define dbid2=3781652766
REM SNAP_ID range for the first DB (the starting snap will be excluded from analysys)
define start_snap2=6345
REM SNAP_ID range for the first DB
define end_snap2=6354
rem DB Link for the second DB, can be "" (empty for local DB) or like "@DBAWR1". Remote AWR repository is useful to analyze overlapping ranges from the same DB.
define dblnk=""
rem ====================================
rem use columns from dba_hist_sqlstat to filter queries
define filter="not(nvl(action,'~')='RTE_REFRESH_JOB' or nvl(module,'~')='oracle@devsp095cn.netcracker.com (TNS V1-V3)' or (nvl(ACTION,'~') like 'CA%' and nvl(MODULE,'~')='DBMS_SCHEDULER'))"
rem define filter="1=1"
rem ====================================
rem Filters out most lightweight sqls sorting by one of the following: CPU_TIME_DELTA,ELAPSED_TIME_DELTA,BUFFER_GETS_DELTA,EXECUTIONS_DELTA
define sortcol=ELAPSED_TIME_DELTA
rem Limits output
define sortlimit=1e8
rem For standalone usage
define embeded=FALSE
==================================================================================================================================
 
6. start SQL*Plus and connect to target DB. User must have read access to AWR views (DBA_HIST*)
7. run the script in SQL*Plus
@getcomph.sql
8. A getcomp.html will be generated. 
